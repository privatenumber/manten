import{expect as v}from"expect";let f,m,y,p,w=!0;typeof process<"u"&&({FORCE_COLOR:f,NODE_DISABLE_COLORS:m,NO_COLOR:y,TERM:p}=process.env||{},w=process.stdout&&process.stdout.isTTY);const S={enabled:!m&&y==null&&p!=="dumb"&&(f!=null&&f!=="0"||w)};function T(e,t){let s=new RegExp(`\\x1b\\[${t}m`,"g"),n=`\x1B[${e}m`,c=`\x1B[${t}m`;return function(r){return!S.enabled||r==null?r:n+(~(""+r).indexOf(c)?r.replace(s,c+n):r)+c}}const g=T(31,39),E=T(32,39),x=E("\u2714"),C=g("\u2716"),I=async(e,t)=>new Promise((s,n)=>{t.timeoutId=setTimeout(()=>{n(new Error(`Timeout: ${e}ms`))},e)});function b(e,t){return async function(n,c,r){e&&(n=`${e} ${n}`);const u=(async()=>{let i;const a={onTestFail(o){i=o}};try{if(r){const o={timeoutId:void 0};try{await Promise.race([c(a),I(r,o)])}finally{clearTimeout(o.timeoutId)}}else await c(a);console.log(x,n)}catch(o){console.error(C,n),o&&typeof o=="object"&&"matcherResult"in o&&o.constructor.name==="JestAssertionError"&&delete o.matcherResult,console.error(o),process.exitCode=1,typeof i=="function"&&i(o)}})();t&&t.push(u),await u}}async function P(e){for(;e.length>0;){const t=e.splice(0);await Promise.all(t)}}function h(e,t){return async function(n,c){e&&(n=`${e} ${n}`);const r=[];try{const u=(async()=>{const i={test:b(`${n} \u203A`,r),describe:h(`${n} \u203A`,r),runTestSuite:(a,...o)=>{const d=(async()=>{let l=await a;return"default"in l&&(l=l.default),l.apply(i,o)})();return r.push(d),d}};await c(i),await P(r)})();t&&t.push(u),await u}catch(u){console.error(u)}}}const O=b(),$=h(),R={describe:$,test:O,runTestSuite:async(e,...t)=>{let s=await e;return"default"in s&&(s=s.default),"default"in s&&(s=s.default),s.apply(R,t)}};function A(e){return function(...t){return e(this||R,...t)}}export{$ as describe,v as expect,O as test,A as testSuite};
